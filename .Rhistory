pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
View(pval)
x <- 6
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
x <- 7
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
x <- 8
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
return(pval$p.value)
x <- 9
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
View(pval)
x <- 10
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
View(pval)
x <- 11
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
x <- 12
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
x <- 13
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
x <- 14
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
ftr[which(tUTR.gene %in% bigene[x])]
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
bigene[x]
bigene[x] != "NA"
if(bigene[x] != "NA"){
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
return(pval$p.value)
}))
if(bigene[x] != "NA"){
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
return(pval$p.value)
}
bigene[x]
if(!is.na(bigene[x])){
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
return(pval$p.value)
}
View(pval)
KStest <- function(PUIdata, tUTR.gene, ftr, bigene, bilabel){
p.val2 <- unlist(lapply(c(1:length(bigene)), function(x){
if(!is.na(bigene[x])){
pui <- as.matrix(PUIdata)[which(tUTR.gene %in% bigene[x]),]
pui <- na.omit(pui[which(ftr[which(tUTR.gene %in% bigene[x])] != "3UTR"),])
# if(length(which(colSums(pui) == 0)) > 0){
#   pui <- as.matrix(pui[,-which(colSums(pui) == 0)])
# }
pval <- suppressWarnings(ks.test(pui[names(which(bilabel[[x]] == 0))], pui[names(which(bilabel[[x]] == 1))], exact = F))
return(pval$p.value)
}
}))
return(p.val2)
}
KStest(results$PUI, results$gene, results$ftr, bigene, bilabel)
devtools::document()
rm(list = c("chisqtest", "KStest"))
# cell type of RS
ct2 <- which(scPACds@colData$celltype[index] == "RS")
result2 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod2 <- getMod(result2$PUI)
mod2$modalities
# cell type of ES
ct3 <- which(scPACds@colData$celltype[index] == "ES")
result3 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod3 <- getMod(result3$PUI)
mod3$modalities
# set the cell type
celltype <- c(rep("SC", 3), rep("RS", 3), rep("ES", 3))
data <- data.frame(celltype)
data$modality <- c("Bimodal","Multimodal","Unimodal")
data$number <- c(mod,mod2,mod3)
# cell type of RS
ct2 <- which(scPACds@colData$celltype[index] == "RS")
result2 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod2 <- getMod(result2$PUI)
mod2$modalities
# cell type of ES
ct3 <- which(scPACds@colData$celltype[index] == "ES")
result3 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod3 <- getMod(result3$PUI)
mod3$modalities
# set the cell type
celltype <- c(rep("SC", 3), rep("RS", 3), rep("ES", 3))
data <- data.frame(celltype)
data$modality <- c("Bimodal","Multimodal","Unimodal")
data$number <- c(table(mod),table(mod2),table(mod3))
table(mod)
View(mod)
# cell type of RS
ct2 <- which(scPACds@colData$celltype[index] == "RS")
result2 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod2 <- getMod(result2$PUI)
mod2$modalities
# cell type of ES
ct3 <- which(scPACds@colData$celltype[index] == "ES")
result3 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod3 <- getMod(result3$PUI)
mod3$modalities
# set the cell type
celltype <- c(rep("SC", 3), rep("RS", 3), rep("ES", 3))
data <- data.frame(celltype)
data$modality <- c("Bimodal","Multimodal","Unimodal")
data$number <- c(table(mod$modalities),table(mod2$modalities),table(mod3$modalities))
ggplot(data, aes(x=celltype, y=number)) +
ggplot2::geom_bar(stat = "identity", position = "dodge", aes(fill=modality))+
scale_y_continuous(limits = c(0,60),breaks = c(0,10,20,30,40,50,60))
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
data("3UTRModalChangeDetail")
ggstatsplot::ggbarstats(data = detChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
View(result1)
which(as.character(mod$modalities == "Bimodal"))
which(mod$modalities == "Bimodal")
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
plotGenePACount3(org.Mm.eg.db, id2, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id2, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, id2, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
View(genename)
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id2, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
label[[3]]
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id2, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id2, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
View(ex.samegene)
plotGenePACount3(org.Mm.eg.db, id2, tUTR.pair.cd.tmp, tUTR.gene,label[[3]])
tUTR.gene <- select(org.Mm.eg.db, keys = tUTR.gene, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene$ENTREZID,label[[3]])
library(grid)
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene$ENTREZID,label[[3]])
knitr::opts_chunk$set(
fig.width = 6,
fig.height = 5.5,
collapse = TRUE,
warning = FALSE,
comment = "#>"
)
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id2, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
tUTR.gene <- select(org.Mm.eg.db, keys = tUTR.gene, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene$ENTREZID,label[[3]])
llibrary(scAPAmod)
library(scAPAmod)
library(org.Mm.eg.db)
PUI <- result1$PUI
tUTR.pair.cd.tmp <- result1$filter.data
tUTR.gene <- result1$gene
tUTR.gene.pui <- rownames(PUI)
which(mod$modalities == "Bimodal")
id2 <- tUTR.gene.pui[3]
genename <- select(org.Mm.eg.db, keys = id2, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
tUTR.gene <- select(org.Mm.eg.db, keys = tUTR.gene, columns = c("SYMBOL","ENTREZID","GENENAME"),
keytype = "ENSEMBL")
plotGenePACount3(org.Mm.eg.db, genename$ENTREZID, tUTR.pair.cd.tmp, tUTR.gene$ENTREZID,label[[3]])
scego <- enrichGO(OrgDb="org.Mm.eg.db", gene = rownames(result1$PUI),keyType = "ENTREZID", ont = "ALL", pAdjustMethod = "BH", pvalueCutoff = 0.05,qvalueCutoff = 0.05, readable= TRUE)
library(clusterProfiler)
scego <- enrichGO(OrgDb="org.Mm.eg.db", gene = rownames(result1$PUI),keyType = "ENTREZID", ont = "ALL", pAdjustMethod = "BH", pvalueCutoff = 0.05,qvalueCutoff = 0.05, readable= TRUE)
barplot(scego,showCategory = 10)
library(clusterProfiler)
scego <- enrichGO(OrgDb="org.Mm.eg.db", gene = rownames(result1$PUI),keyType = "ENSEMBL", ont = "ALL", pAdjustMethod = "BH", pvalueCutoff = 0.05,qvalueCutoff = 0.05, readable= TRUE)
View(result1)
barplot(scego,showCategory = 10)
# set the cell type
celltype <- c(rep("SC", 3), rep("RS", 3), rep("ES", 3))
data <- data.frame(celltype)
data$modality <- c("Bimodal","Multimodal","Unimodal")
data$number <- c(table(mod$modalities),table(mod2$modalities),table(mod3$modalities))
ggplot(data, aes(x=celltype, y=number)) +
ggplot2::geom_bar(stat = "identity", position = "dodge", aes(fill=modality))+
scale_y_continuous(limits = c(0,60),breaks = c(0,10,20,30,40,50,60))
View(mod)
# cell type of RS
ct2 <- which(scPACds@colData$celltype[index] == "RS")
result2 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod2 <- getMod(result2$PUI)
mod2$modalities
# cell type of ES
ct3 <- which(scPACds@colData$celltype[index] == "ES")
result3 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
mod3 <- getMod(result3$PUI)
mod3$modalities
View(result2)
View(data)
table(mod$modalities)
table(mod2$modalities)
table(mod3$modalities)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
library(ggplot2)
library(ggstatsplot)
data(3UTRModalChange)
#library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
#library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
windowsFonts()
library(extrafont)
PackageName::FunctionName
knitr::opts_chunk$set(
fig.width = 6,
fig.height = 5.5,
collapse = TRUE,
warning = FALSE,
comment = "#>"
)
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
library(extrafont)
library(ggplot2)
library(ggstatsplot)
staChange <- data("3UTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
head(staChange[1:2,1:5])
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
head(staChange[1:2,1:2])
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
head(staChange[1:2,])
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
head(staChange[1:2])
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("3UTRModalChange")
head(staChange[1:2])
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data(tUTRModalChange)
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
library(extrafont)
library(ggplot2)
library(ggstatsplot)
load("./data/tUTRModalChange.rda")
library(movAPA, warn.conflicts = FALSE, quietly=TRUE)
data(scPACds)
head(scPACds@counts[1:2,1:5])
head(scPACds@anno, n=2)
head(scPACds@colData, n=2)
levels(scPACds@colData$celltype)
library(scAPAmod, warn.conflicts = FALSE, quietly=TRUE)
# 3' UTR
index <- which(scPACds@anno$ftr == "3UTR")
UTR_gene <- scPACds@anno$gene[index]
UTR_chr <- scPACds@anno$chr[index]
UTR_strand <- scPACds@anno$strand[index]
UTR_coord <- scPACds@anno$coord[index]
UTR_ftr_start <- scPACds@anno$ftr_start[index]
UTR_ftr_end <- scPACds@anno$ftr_end[index]
UTR_three_UTR_length <- scPACds@anno$three_UTR_length[index]
UTR_anno <- data.frame(chr = as.character(UTR_chr),
strand = as.character(UTR_strand),
coord =as.integer(UTR_coord),
gene = as.character(UTR_gene),
ftr_start = as.integer(UTR_ftr_start),
ftr_end = as.integer(UTR_ftr_end),
three_UTR_length = as.integer(UTR_three_UTR_length))
UTR_counts <-  scPACds@counts[,index]
ct1 <- which(scPACds@colData$celltype[index] == "SC")
result1 <- extrPairPA(UTR_counts[,ct1],
as.character(UTR_anno$gene),UTR_anno)
# non 3' UTR
ct <- which(scPACds@colData$celltype == "SC")
results <- exnon3UTRPA(scPACds@counts[,ct],
scPACds@anno$gene, scPACds@anno, scPACds@anno$ftr, gn = 1, cn = 1)
library(extrafont)
library(ggplot2)
library(ggstatsplot)
data("tUTRModalChange")
ggstatsplot::ggbarstats(data = staChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
library(extrafont)
font_import()
loadfonts(device = "postscript")
fonts()
install.packages( c(“htmltools”,”caTools”,”bitops”,”rmarkdown”) )
install.packages( c("htmltools","caTools","bitops","rmarkdown") )
install.packages(c("htmltools", "caTools", "bitops", "rmarkdown"))
install.packages("showtext")
knitr::opts_chunk$set(
fig.width = 6,
fig.height = 5.5,
collapse = TRUE,
warning = FALSE,
comment = "#>"
)
data("tUTRModalChangeDetail")
ggstatsplot::ggbarstats(data = detChange, x = condition, y = celltype,
title = "statistic exchange of modalities from different cell type",
ylab = "% of total common gene of PA",
# ggstatsplot.layer = FALSE,
sampling.plan = "jointMulti",
ggtheme = hrbrthemes::theme_ipsum_pub(),
legend.title = "condition", messages = F, palette = "Set2")
